//Forge Buildscript
buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        //maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: "${forgegradle_version}", changing: true
        //classpath group: 'org.spongepowered', name: 'mixingradle', version: "${mixingradle_version}"
    }
}
//Apply Plugins
apply plugin: 'net.minecraftforge.gradle'
//apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
//Mod Info
version = "${modMinecraftVersion}" + "-" + "${modVersion}"
group = "${modGroup}"
archivesBaseName = "${modFileName}"
//Java Info
java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
//Setup Minecraft
minecraft {
    mappings channel: 'official', version: "${modMinecraftVersion}"
    //accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            //arg '-mixin.config=afktimer.mixins.json'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'
            mods {
                afktimer {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            //arg '-mixin.config=afktimer.mixins.json'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'
            mods {
                afktimer {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'
            args '--mod', "${modId}", '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                afktimer {
                    source sourceSets.main
                }
            }
        }
    }
}
//Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }
//Mixins
//mixin {
    //add sourceSets.main, "afktimer.refmap.json"
//}
//Mod Repositories - None Atm
//Mod Dependencies
dependencies {
    minecraft 'net.minecraftforge:forge:' + "${modMinecraftVersion}" + '-' + "${modForgeVersion}"
    //annotationProcessor 'org.spongepowered:mixin:' + "${modMixinVersion}" + ':processor'
}
//Mod jar
jar {
    manifest {
        attributes([
            "Specification-Title": "${modId}",
            "Specification-Vendor": "${modGroup}",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" : "${modGroup}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")//,
            //"MixinConfigs": "afktimer.mixins.json"
        ])
    }
}
//Deobf
task deobfJar(type: Jar) {
    from(sourceSets.main.output)
    archiveName = "${baseName}-${version}-deobf.${extension}"
}
//Src
task srcJar(type: Jar) {
    from(sourceSets.main.java)
    classifier = 'sources'
    archiveName = "${baseName}-${version}-sources.${extension}"
}
//Artifacts
artifacts {
    archives deobfJar, srcJar
}
//Mod publishing
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
